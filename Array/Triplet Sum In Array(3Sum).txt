C++ Solution

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution{
    public:
    //Function to find if there exists a triplet in the 
    //array A[] which sums up to X.
    bool find3Numbers(int arr[], int n, int X)
    {
        //Your Code Here
        int sum = 0;
        sort(arr, arr + n);
        for(int i = 0; i < n-2; i++){
            int j = i + 1, k = n-1;
            while(j < k){
                sum = arr[i] + arr[j] + arr[k];
                if(sum == X){
                    return true;
                }
                else if(sum < X){
                    j++;
                }
                else{
                    k--;
                }
            }
        }
        return false;
    }
};

// { Driver Code Starts.

int main()
{
	int T;
	cin>>T;
	while(T--)
	{
		int n,X;
		cin>>n>>X;
		int i,A[n];
		for(i=0;i<n;i++)
			cin>>A[i];
		Solution ob;
        cout <<  ob.find3Numbers(A, n, X) << endl;
    }
}
  // } Driver Code Ends

Java Solution

// { Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.io.*;
import java.lang.*;

class Main
{
    public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
		while(t-->0){
		    String inputLine[] = br.readLine().trim().split(" ");
		    int n = Integer.parseInt(inputLine[0]);
		    int X = Integer.parseInt(inputLine[1]);
		    int A[] = new int[n];
		    inputLine = br.readLine().trim().split(" ");
		    for(int i=0; i<n; i++){
		        A[i] = Integer.parseInt(inputLine[i]);
		    }
		    Solution ob=new Solution();
		    boolean ans = ob.find3Numbers(A, n, X);
		    System.out.println(ans?1:0);
		}
	}
}// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to find if there exists a triplet in the 
    //array A[] which sums up to X.
    public static boolean find3Numbers(int arr[], int n, int X) { 
       // Your code Here
       Arrays.sort(arr);
       int sum;
       for(int i = 0; i < n-2; i++){
           int j = i+1, k = n-1;
           while(j < k){
               sum = arr[i] + arr[j] + arr[k];
               if(sum == X){
                   return true;
               }
               else if(sum < X){
                   j++;
               }
               else{
                   k--;
               }
           }
       }
       return false;
    }
}
