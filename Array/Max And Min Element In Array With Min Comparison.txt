C++ Solution

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;
#define ll long long

pair<long long, long long> getMinMax(long long a[], int n) ;

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        ll a[n];
        for (int i = 0; i < n; i++) cin >> a[i];

        pair<ll, ll> pp = getMinMax(a, n);

        cout << pp.first << " " << pp.second << endl;
    }
    return 0;
}// } Driver Code Ends

int getMax(long long a, long long b){
    return a > b ? a : b;
}

int getMin(long long a, long long b){
    return a > b ? b : a;
}

pair<long long, long long> getMinMax(long long arr[], int n) {
    
    long long max, min;
    int i = 0;
    
    if(n % 2){
        max = min = arr[0];
        i = 1;
    }
    else{
        max = getMax(arr[0], arr[1]);
        min = getMin(arr[0], arr[1]);
        i = 2;
    }
    
    while(i < n-1){
        max = getMax(max, getMax(arr[i], arr[i+1]));
        min = getMin(min, getMin(arr[i], arr[i+1]));
        i += 2;
    }
    
    return {min, max};
}

Java Solution

// { Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;

class pair  
{  
    long first, second;  
    public pair(long first, long second)  
    {  
        this.first = first;  
        this.second = second;  
    }  
}

class GFG {
	public static void main(String[] args) throws IOException
	{
	        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t =
            Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while(t-->0)
        {
            long n = Long.parseLong(br.readLine().trim());
            long a[] = new long[(int)(n)];
            // long getAnswer[] = new long[(int)(n)];
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                a[i] = Long.parseLong(inputLine[i]);
            }
            
            Compute obj = new Compute();
            pair product = obj.getMinMax(a, n); 
            System.out.println(product.first+" "+product.second);
            
        }
	}
}

// } Driver Code Ends


//User function Template for Java

/*
 class pair  
{  
    long first, second;  
    public pair(long first, long second)  
    {  
        this.first = first;  
        this.second = second;  
    }  
} */

class Compute 
{
    
    static long getMin(long a, long b){
        return a < b ? a : b;
    }
    
    static long getMax(long a, long b){
        return a > b ? a : b;
    }
    
    static pair getMinMax(long arr[], long n)  
    {
        //Write your code here
        long min, max;
        int i;
        
        if(n % 2 == 1){
            min = arr[0];
            max = arr[1];
            i = 1;
        }
        else{
            min = getMin(arr[0], arr[1]);
            max = getMax(arr[0], arr[1]);
            i = 2;
        }
        
        while(i < n-1){
            min = getMin(min, getMin(arr[i], arr[i+1]));
            max = getMax(max, getMax(arr[i], arr[i+1]));
            i += 2;
        }
        
        return new pair(min, max);
    }
}
